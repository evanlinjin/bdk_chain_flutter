// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.76.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'bridge_generated.io.dart'
    if (dart.library.html) 'bridge_generated.web.dart';
import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';

abstract class Native {
  Future<Platform> platform({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kPlatformConstMeta;

  Future<bool> rustReleaseMode({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kRustReleaseModeConstMeta;

  Future<Counter> newCounter({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kNewCounterConstMeta;

  Future<int> incrementCounter({required Counter counter, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIncrementCounterConstMeta;

  Future<int> decrementCounter({required Counter counter, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDecrementCounterConstMeta;

  DropFnType get dropOpaqueCounter;
  ShareFnType get shareOpaqueCounter;
  OpaqueTypeFinalizer get CounterFinalizer;
}

@sealed
class Counter extends FrbOpaque {
  final Native bridge;
  Counter.fromRaw(int ptr, int size, this.bridge) : super.unsafe(ptr, size);
  @override
  DropFnType get dropFn => bridge.dropOpaqueCounter;

  @override
  ShareFnType get shareFn => bridge.shareOpaqueCounter;

  @override
  OpaqueTypeFinalizer get staticFinalizer => bridge.CounterFinalizer;
}

enum Platform {
  Unknown,
  Android,
  Ios,
  Windows,
  Unix,
  MacIntel,
  MacApple,
  Wasm,
}
